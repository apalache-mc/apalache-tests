name: Run Benchmarks

# For each combination of version and experiment suite (called "strat")
# this workflow does the following in a dedicated build agent:
#
# - Creates a temporary branch for storing the results of the experiment run
# - Runs the experiments
# - Commits the results to the temprary branch
#
# Once all experiments have been run, a new agent is created which
#
# - merges in all the results from the temporary branches
# - updates the report that summarizes the results for each experiment suite
# - opens a PR into master with the updates results and reports

on:
  # TODO: Change to only run on master branch
  push:
    branches:
      - master
      - shon/ci # TODO: Remove before merging into master
      - shon/github-actions # TODO: Remove before merging into shon/ci
  # TODO: Enable manual dispatch once merged into master
  # is addressed
  # workflow_dispatch

env:
  REPORT_BRANCH: report-${{ github.run_id }}

jobs:
  run-benchmarks:
    strategy:
      matrix:
        # NOTE: Any updates to the version an strat must be complemented by
        # updates to the VERSIONS and STRATEGIES in the Makefile
        version:
          - 0.7.0
          - 0.6.1
        strat:
          - 001indinv
          - 002bmc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Configure git user
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com

      - name: Create intermediate branch
        run: git checkout -b $REPORT_BRANCH-${{ matrix.strat }}-${{ matrix.version }}

      - name: Run experiment ${{ matrix.strat }} for version ${{ matrix.version }}
        run: make experiment-${{ matrix.strat }}-${{ matrix.version }}-serial

      - name: Push results to intermediate branch
        run: |
          git add .
          git commit . -m "Add results for ${{ matrix.strat }} on version ${{ matrix.version }}"
          git push -u origin $REPORT_BRANCH-${{ matrix.strat }}-${{ matrix.version }}

  make-report:
    needs: run-benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

      - name: Install python dependencies
        run: |
          # TODO Replace with proper python dependency management in script
          pip3 install csvtomd matplotlib

      - name: Configure git user
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com

      - name: Fetch remote branches
        run: git fetch origin

      - name: Merge in report branches
        run: |
          git for-each-ref --format='%(refname:lstrip=-2)' refs/remotes/origin/${REPORT_BRANCH}* |
          while read branch
          do
            git merge $branch
          done

      - name: Generate reports
        run: make reports-only

        # See https://github.com/peter-evans/create-pull-request
      - name: Create pull request with report
        uses: peter-evans/create-pull-request@v3
        with:
          branch: report-${{ github.run_id }}
          title: Update benchmarks report
          commit-message: Update report from run ${{ github.run_id }}

      - name: Cleanup intermediate branches
        run: |
          git for-each-ref --format='%(refname:lstrip=-1)' refs/remotes/origin/${REPORT_BRANCH}-*-* |
          while read branch
          do
            git push origin --delete $branch
          done
