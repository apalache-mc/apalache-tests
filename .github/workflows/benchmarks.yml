name: Benchmarks

# TODO Make this only run on certain branches/commits?
on: push

env:
  REPORT_BRANCH: report-${{ github.run_id }}

jobs:
  run-benchmarks:
    strategy:
      matrix:
        version:
          - 0.7.0
          - 0.6.1
        strat:
          - 001indinv
          # FIXME
          # - 002bmc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure git user
        run: |
          git config user.name github-ci
          git config user.email todo@example.com
      - run: git checkout -b $REPORT_BRANCH-${{ matrix.strat }}-${{ matrix.version }}
      - name: Run experiment ${{ matrix.strat }} for version ${{ matrix.version }}
        run: make experiment-${{ matrix.strat }}-${{ matrix.version }}-serial
      - name: Push results to intermediate branch
        run: |
          git add .
          git commit . -m "Adding experiment results"
          git push -u origin $REPORT_BRANCH-${{ matrix.strat }}-${{ matrix.version }}

  make-report:
    needs: run-benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install python dependencies
        run: |
          # TODO Replace with proper python dependency management
          pip3 install csvtomd matplotlib
      - name: Create report branch
        run: git checkout -b $REPORT_BRANCH
      - name: Configure git user
        run: |
          git config user.name github-ci
          git config user.email todo@example.com
      - name: Fetch remote branches
        run: git fetch origin
      - name: Merge in report branches
        run: |
          git for-each-ref --format='%(refname:lstrip=-2)' refs/remotes/origin/${REPORT_BRANCH}* |
          while read branch
          do
            git merge $branch
          done
      - name: Generate reports
        run: make reports-only
      - name: Push report branch
        run: |
          git add .
          git commit . -m "Adding report"
          git push -u origin $REPORT_BRANCH
      - name: Cleanup intermediate branches
        run: |
          git for-each-ref --format='%(refname:lstrip=-3)' refs/remotes/origin/${REPORT_BRANCH}-*-* |
          while read branch
          do
            echo git push origin --delete $branch
          done
      - name: Open PR
        run: echo "TODO"
